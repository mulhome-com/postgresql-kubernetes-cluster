apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-config
data:
  master-salve-config.sh: |-
          set -ex
          [[ $HOSTNAME =~ ^([a-z|-]+)-([0-9]+)$ ]] || exit 1
          template=${BASH_REMATCH[1]}
          ordinal=${BASH_REMATCH[2]}
          CONFIG=/etc/postgresql/
          DATA=/var/lib/postgresql/data/
          if [[ $ordinal -eq 0 ]]; then
            master_exist=$(find ${CONFIG} -name master)
            [[ -z ${master_exist} ]] || exit 1

            echo "Create the pg_hba configure ..."
            echo "host    replication    repmgr    10.10.0.0/16    trust" >> ${DATA}/pg_hba.conf
            echo "host    all            all        0.0.0.0/0        md5" >> ${DATA}/pg_hba.conf

            echo "Create the postgresql configure ..."
            echo "archive_mode = on"          >> ${CONFIG}/postgresql.conf
            echo "archive_command = '/bin/true'"  >> ${CONFIG}/postgresql.conf
            echo "archive_timeout = 0"        >> ${CONFIG}/postgresql.conf
            echo "listen_addresses = '*'"     >> ${CONFIG}/postgresql.conf
            echo "wal_level = hot_standby"    >> ${CONFIG}/postgresql.conf
            echo "max_wal_senders = 10"       >> ${CONFIG}/postgresql.conf
            echo "wal_keep_segments = 10240"  >> ${CONFIG}/postgresql.conf
            echo "max_connections = 512"      >> ${CONFIG}/postgresql.conf

            echo "Done" > ${CONFIG}/master
          else
            slave_exist=$(find ${CONFIG} -name slave)
            [[ -z ${slave_exist} ]] || exit 1

            echo "Stop initial server ..."
            pg_ctl -D ${DATA} -m fast -w stop

            rm -rf ${DATA}/*

            echo "Backup the master data to the slave server ..."
            pg_basebackup -h ${template}-0.postgres-service -U repmgr -D ${DATA} -Fp -X stream -P -R
            chown postgres:postgres -R ${DATA}

            echo "Start server to keep container ... "
            pg_ctl -D ${DATA} -w start

            echo "Done" > ${CONFIG}/slave
          fi

  create-replication-role.sql: |-
    create role repmgr login replication encrypted password 'rep_password';

  alter-postgres-password.sql: |-
    alter role postgres with password 'IKge6geoZHio';
